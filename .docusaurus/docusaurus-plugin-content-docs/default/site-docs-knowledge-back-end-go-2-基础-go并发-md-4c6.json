{
  "unversionedId": "knowledge/backEnd/go/基础/go-concurrent",
  "id": "knowledge/backEnd/go/基础/go-concurrent",
  "title": "Go并发",
  "description": "Go 语言的并发是基于 goroutine 的，goroutine 类似于线程，但并非线程。可以将 goroutine 理解为一种虚拟线程。Go 语言运行时会参与调度 goroutine，并将 goroutine 合理地分配到每个 CPU 中，最大限度地使用 CPU 性能。开启一个 goroutine 的消耗非常小（大约 2KB 的内存），你可以轻松创建数百万个goroutine。",
  "source": "@site/docs/knowledge/backEnd/go/2.基础/Go并发.md",
  "sourceDirName": "knowledge/backEnd/go/2.基础",
  "slug": "/knowledge/backEnd/go/基础/go-concurrent",
  "permalink": "/docs/knowledge/backEnd/go/基础/go-concurrent",
  "draft": false,
  "tags": [
    {
      "label": "go",
      "permalink": "/docs/tags/go"
    }
  ],
  "version": "current",
  "frontMatter": {
    "id": "go-concurrent",
    "title": "Go并发",
    "date": "2022-05-22T00:00:00.000Z",
    "authors": "kuizuo",
    "tags": [
      "go"
    ],
    "keywords": [
      "go"
    ]
  },
  "sidebar": "knowledge",
  "previous": {
    "title": "Go调用js代码",
    "permalink": "/docs/knowledge/backEnd/go/基础/go-call-js"
  },
  "next": {
    "title": "Gin框架初体验",
    "permalink": "/docs/knowledge/backEnd/go/基础/try-gin-framework"
  }
}